{"title":"3 Tips for Better Data Analysis Using Strategies from Software Development","markdown":{"yaml":{"title":"3 Tips for Better Data Analysis Using Strategies from Software Development","format":{"revealjs":{"incremental":true}},"editor":"source"},"headingText":"1. Borrow from Agile","containsRefs":false,"markdown":"\n\n\n**Similar to how developers produce software, analysts produce _data products_**\n\n**Data products include dashboards, analyses, and data apps**\n\n\nAgile is a process framework that focuses on iterative development done in short bursts, called _sprints_  \n\n**Planning and prioritization at the start of each sprint** \n  \nUse regular scrum meetings to conduct sprint planning, prioritization, and review\n\n**Clearly defining tasks with deliverables and timelines**    \n\nPresent hypotheses, approach(es), and aspects of data product(s)\n\n**Retrospectives and demos at the end of each sprint** \n\nPresent analyses/data products to stakeholders, review sprint\n\n\n## 2. Use READMEs\n\n\n**A README is documentation that tells you how to start using and understanding a new piece of software**\n\n**A typical README is a text or markdown-formatted file included with the project**\n\nLearn how to format a README here: https://www.makeareadme.com/\n\n**READMEs for data products include things like usage, reproducibility, sources, and metadata** \n\n## 3. Integrate User Experience Testing\n\n**For a widely-used data product, consider User Stories**\n\n  User Stories are a prioritized list of tasks the user is trying to accomplish\n\n  User Stories help developers, analysts understand users’ needs\n\t\n**Iterative, human centered design**\n\n  Is the analysis interpretable? Is the way it’s presented intuitive and simple?\n\n  Prototype analysis with user groups, have them ask questions, document findings\n\n## **Tips for Better Data Analysis**\n\n1. Borrow from Agile  \n2. Use READMEs  \n3. Integrate User Experience Testing\n"},"formats":{"revealjs":{"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","incremental":true,"output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.2.269","auto-stretch":true,"editor":"source","pagetitle":"{{< meta title >}} | Hersh Gupta","description-meta":"{{< meta description >}}","author-meta":"Hersh Gupta","title":"3 Tips for Better Data Analysis Using Strategies from Software Development"}}}}